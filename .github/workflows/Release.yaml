name: Publish Release

on:
  push:
    branches:
      - "main"
    paths-ignore:
      - "README.md"
      - 'docs/**'
      - '.github/ISSUE_TEMPLATE/**'
      - '.github/PULL_REQUEST_TEMPLATE.md'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.16
      - name: Set up awesome-ci
        run: |
          wget https://github.com/eksrvb/awesome-ci/releases/latest/download/awesome-ci
          mv awesome-ci awesome-ci-latest
          chmod +x awesome-ci-latest
      - name: get next Version for project build
        id: version_step
        run: echo "::set-output name=new_version::$(./awesome-ci-latest getBuildInfos -format version)"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Build amd64
        run: go build -v -ldflags "-X main.version=${{ steps.version_step.outputs.new_version }}" -o out/awesome-ci
        env:
          GOOS: linux
          GOARCH: amd64
      - name: Build arm64
        run: go build -v -ldflags "-X main.version=${{ steps.version_step.outputs.new_version }}" -o out/awesome-ci-arm64
        env:
          GOOS: linux
          GOARCH: arm64
      - name: Print version of awesome-ci
        run: ./out/awesome-ci -version
      - name: Integration testing
        run: ./tools/test.sh ./out/awesome-ci
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Create Release
        run: ./awesome-ci createRelease -uploadArtifacts "out/awesome-ci,out/awesome-ci-arm64"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
